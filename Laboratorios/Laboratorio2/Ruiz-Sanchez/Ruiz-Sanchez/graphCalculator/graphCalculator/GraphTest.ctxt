#BlueJ class context
comment0.target=GraphTest
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ shouldFail()
comment11.params=
comment11.target=void\ shouldErr()
comment12.params=
comment12.target=void\ shouldCreateGraphCalculator()
comment13.params=
comment13.target=void\ shouldCreateVariable()
comment14.params=
comment14.target=void\ shouldAssignGraphToVariable()
comment15.params=
comment15.target=void\ shouldNotAssignGraphToNonExistentVariable()
comment16.params=
comment16.target=void\ shouldNotRetrieveNonExistentGraph()
comment17.params=
comment17.target=void\ shouldNotCreateVariableWithEmptyName()
comment18.params=
comment18.target=void\ shouldNotCreateVariableWithNullName()
comment19.params=
comment19.target=void\ testRemoveEdge()
comment2.params=
comment2.target=void\ shouldCreateEmptyGraph()
comment20.params=
comment20.target=void\ testContainsAllVertices()
comment21.params=
comment21.target=void\ testFindPathThrough()
comment22.params=
comment22.target=void\ shouldUnionTwoGraphsCorrectly()
comment23.params=
comment23.target=void\ shouldIntersectTwoGraphsCorrectly()
comment24.params=
comment24.target=void\ shouldComputeDifferenceCorrectly()
comment25.params=
comment25.target=void\ shouldReturnEmptyGraphWhenSubtractingItself()
comment26.params=
comment26.target=void\ shouldJoinTwoGraphsCorrectly()
comment3.params=
comment3.target=void\ shouldCreateGraphs()
comment4.params=
comment4.target=void\ shouldNotHaveDuplicateVerticesEdges()
comment5.params=
comment5.target=void\ shouldNotBeCaseSensitive()
comment6.params=
comment6.target=void\ shouldConvertToString()
comment7.params=
comment7.target=void\ shouldValityEquality()
comment8.params=
comment8.target=void\ tearDown()
comment8.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment9.params=
comment9.target=void\ shouldPass()
numComments=27
