#BlueJ class context
comment0.target=MaxwellContainer
comment0.text=\r\n\ La\ clase\ MaxwellContainer\ representa\ el\ contenedor\ en\ la\ simulaci\u00F3n\ de\ Maxwell's\ Demon.\r\n\ Este\ contenedor\ almacena\ part\u00EDculas,\ demonios\ y\ agujeros.\r\n\ Adem\u00E1s,\ inicia\ la\ simulaci\u00F3n\ de\ movimiento\ cuando\ se\ hace\ visible.\r\n\ \r\n\ @author\ Edgar\ Daniel\ Ruiz\ Pati\u00F1o\r\n\ @author\ Juan\ Esteban\ S\u00E1nchez\ Garc\u00EDa\r\n\ @version\ 1\r\n
comment1.params=width\ height
comment1.target=MaxwellContainer(int,\ int)
comment1.text=\r\n\ Constructor\ de\ MaxwellContainer.\r\n\ @param\ width\ Ancho\ de\ la\ c\u00E1mara\ (el\ total\ ser\u00E1\ el\ doble).\r\n\ @param\ height\ Altura\ de\ la\ c\u00E1mara.\r\n
comment10.params=
comment10.target=void\ start()
comment10.text=\r\n\ Inicia\ la\ simulaci\u00F3n.\r\n
comment11.params=
comment11.target=void\ finish()
comment11.text=\r\n\ Finaliza\ la\ simulaci\u00F3n.\r\n
comment12.params=
comment12.target=java.util.List\ particles()
comment12.text=\r\n\ Obtiene\ la\ lista\ de\ part\u00EDculas.\r\n\ @return\ Lista\ de\ part\u00EDculas.\r\n
comment13.params=
comment13.target=java.util.List\ demons()
comment13.text=\r\n\ Obtiene\ la\ lista\ de\ demonios.\r\n\ @return\ Lista\ de\ demonios.\r\n
comment14.params=
comment14.target=java.util.List\ holes()
comment14.text=\r\n\ Obtiene\ la\ lista\ de\ agujeros.\r\n\ @return\ Lista\ de\ agujeros.\r\n
comment15.params=
comment15.target=int\ getWidth()
comment15.text=\r\n\ Obtiene\ el\ ancho\ total\ del\ contenedor.\r\n\ @return\ Ancho\ total\ del\ contenedor.\r\n
comment16.params=
comment16.target=int\ getHeight()
comment16.text=\r\n\ Obtiene\ la\ altura\ total\ del\ contenedor.\r\n\ @return\ Altura\ total\ del\ contenedor.\r\n
comment17.params=steps
comment17.target=void\ makeVisible(int)
comment17.text=\r\n\ Hace\ visible\ el\ contenedor\ y\ sus\ elementos.\r\n\ Adem\u00E1s,\ inicia\ el\ movimiento\ de\ las\ part\u00EDculas\ por\ un\ tiempo\ determinado.\r\n\ \r\n\ @param\ steps\ N\u00FAmero\ de\ iteraciones\ antes\ de\ detener\ la\ simulaci\u00F3n.\r\n
comment18.params=
comment18.target=void\ makeInvisible()
comment18.text=\r\n\ Hace\ invisible\ el\ contenedor\ y\ sus\ elementos.\r\n
comment19.params=
comment19.target=boolean\ isVisible()
comment19.text=\r\n\ Obtiene\ el\ estado\ de\ visibilidad.\r\n\ @return\ booleano\ que\ indica\ si\ el\ contenedor\ es\ visible.\r\n
comment2.params=
comment2.target=void\ addDemon()
comment2.text=\r\n\ Agrega\ un\ demonio\ al\ contenedor.\r\n\ \r\n
comment20.params=steps
comment20.target=void\ runSimulation(int)
comment20.text=\r\n\ Ejecuta\ la\ simulaci\u00F3n\ de\ movimiento\ de\ part\u00EDculas\ durante\ un\ tiempo\ determinado.\r\n\ \r\n\ @param\ steps\ N\u00FAmero\ de\ iteraciones\ antes\ de\ detener\ la\ simulaci\u00F3n.\r\n
comment3.params=
comment3.target=void\ deleteDemon()
comment3.text=\r\n\ Elimina\ un\ demonio\ del\ contenedor.\r\n\ Si\ la\ lista\ esta\ vacia\ sale\ mensaje\ de\ error\r\n
comment4.params=
comment4.target=void\ openGate()
comment4.text=\r\n\ Permite\ pasar\ particulas\ a\ traves\ del\ demon\r\n
comment5.params=
comment5.target=void\ closeGate()
comment5.text=\r\n\ No\ permite\ pasar\ particulas\ a\ traves\ del\ demon\r\n
comment6.params=color
comment6.target=void\ addParticle(java.lang.String)
comment6.text=\r\n\ Agrega\ una\ nueva\ part\u00EDcula\ al\ contenedor.\r\n\ La\ part\u00EDcula\ se\ posiciona\ aleatoriamente\ dentro\ de\ los\ l\u00EDmites\ de\ la\ c\u00E1mara\ correspondiente\r\n\ (azul\ en\ la\ izquierda\ y\ roja\ en\ la\ derecha).\ Tambi\u00E9n\ se\ le\ asigna\ una\ velocidad\ aleatoria.\r\n\r\n\ @param\ color\ Color\ de\ la\ part\u00EDcula\ a\ crear.\ Puede\ ser\ "red"\ o\ "blue".\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ "red"\:Se\ crea\ en\ la\ mitad\ derecha\ del\ contenedor.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ "blue"\:Se\ crea\ en\ la\ mitad\ izquierda\ del\ contenedor.\r\n\r\n\ -\ La\ part\u00EDcula\ debe\ estar\ dentro\ de\ su\ respectiva\ mitad.\r\n\ -\ Se\ evita\ colocarla\ demasiado\ cerca\ de\ los\ bordes\ con\ un\ margen\ de\ seguridad\ (`padding`).\r\n\ -\ La\ velocidad\ en\ `x`\ y\ `y`\ no\ puede\ ser\ 0,\ para\ asegurar\ movimiento.\r\n\r\n\ Funcionamiento\:\r\n\ 1.\ Se\ genera\ una\ posici\u00F3n\ aleatoria\ `(pX,\ pY)`\ dentro\ de\ la\ regi\u00F3n\ correcta\ seg\u00FAn\ el\ color.\r\n\ 2.\ Se\ asigna\ una\ velocidad\ aleatoria\ `(vx,\ vy)`,\ asegurando\ que\ ninguna\ sea\ 0.\r\n\ 3.\ Se\ crea\ la\ part\u00EDcula\ y\ se\ agrega\ a\ la\ lista\ de\ part\u00EDculas.\r\n\ 4.\ Si\ la\ simulaci\u00F3n\ es\ visible\ (`isVisible`),\ se\ hace\ visible\ la\ nueva\ part\u00EDcula.\r\n
comment7.params=
comment7.target=void\ removeParticle()
comment7.text=\r\n\ Elimina\ la\ \u00FAltima\ part\u00EDcula\ agregada\ al\ contenedor.\r\n\r\n\ Funcionamiento\:\r\n\ 1.\ Verifica\ si\ hay\ part\u00EDculas\ en\ la\ lista\ `particles`.\r\n\ 2.\ Si\ la\ lista\ no\ est\u00E1\ vac\u00EDa\:\r\n\ \ \ \ -\ Obtiene\ la\ \u00FAltima\ part\u00EDcula\ agregada.\r\n\ \ \ \ -\ La\ hace\ invisible\ antes\ de\ eliminarla.\r\n\ \ \ \ -\ La\ elimina\ de\ la\ lista.\r\n\ 3.\ Si\ la\ lista\ est\u00E1\ vac\u00EDa,\ muestra\ un\ mensaje\ indicando\ que\ no\ hay\ part\u00EDculas\ para\ eliminar.\r\n\r\n\ -\ No\ hace\ nada\ si\ no\ hay\ part\u00EDculas\ en\ la\ lista.\r\n\ -\ Solo\ elimina\ la\ \u00FAltima\ part\u00EDcula\ agregada\ (orden\ tipo\ pila,\ LIFO).\r\n
comment8.params=
comment8.target=void\ addHole()
comment8.text=\r\n\ Agrega\ un\ nuevo\ agujero\ (Hole)\ al\ contenedor\ en\ una\ posici\u00F3n\ aleatoria.\r\n\ \r\n\ El\ agujero\ se\ genera\ dentro\ de\ los\ l\u00EDmites\ del\ contenedor,\ evitando\ la\ zona\ \r\n\ central\ donde\ est\u00E1\ la\ barrera\ divisoria.\ \ \r\n\ Si\ la\ visualizaci\u00F3n\ est\u00E1\ activada,\ el\ agujero\ se\ mostrar\u00E1\ inmediatamente\ despu\u00E9s\ \r\n\ de\ ser\ agregado.\r\n
comment9.params=
comment9.target=void\ removeHole()
comment9.text=\r\n\ Eliminar\ el\ ultimo\ Hole\ agregado\ al\ contenedor.\r\n\r\n\ Funcionamiento\:\r\n\ 1.\ Verifica\ si\ hay\ Hole\ en\ la\ lista\ `holes`.\r\n\ 2.\ Si\ la\ lista\ no\ est\u00E1\ vac\u00EDa\:\r\n\ \ \ \ -\ Obtiene\ el\ ultimo\ Hole\ agregada.\r\n\ \ \ \ -\ Lo\ hace\ invisible\ antes\ de\ eliminarlo.\r\n\ \ \ \ -\ Lo\ elimina\ de\ la\ lista.\r\n\ 3.\ Si\ la\ lista\ est\u00E1\ vac\u00EDa,\ muestra\ un\ mensaje\ indicando\ que\ no\ hay\ holes\ para\ eliminar.\r\n\r\n\ -\ No\ hace\ nada\ si\ no\ hay\ holes\ en\ la\ lista.\r\n\ -\ Solo\ elimina\ el\ ultimo\ Hole\ agregada\ (orden\ tipo\ pila,\ LIFO).\r\n
numComments=21
